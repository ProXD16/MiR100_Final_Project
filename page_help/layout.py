from dash import dcc, html, Input, Output
import plotly.graph_objects as go
import dash_bootstrap_components as dbc

class MiR100Manual:
    def __init__(self):
        # M√†u ch·ªß ƒë·∫°o
        self.primary_color = '#77B5FE'
        self.secondary_color = '#5A9FE8'
        self.accent_color = '#4A8BD8'
        
        # D·ªØ li·ªáu th√¥ng s·ªë k·ªπ thu·∫≠t
        self.specifications_data = {
            'K√≠ch th∆∞·ªõc': '890 x 580 x 352 mm',
            'Tr·ªçng l∆∞·ª£ng': '67 kg',
            'T·∫£i tr·ªçng t·ªëi ƒëa': '100 kg',
            'T·ªëc ƒë·ªô t·ªëi ƒëa': '1.5 m/s',
            'Th·ªùi gian s·∫°c': '2-3 gi·ªù',
            'Th·ªùi gian ho·∫°t ƒë·ªông': 'L√™n ƒë·∫øn 9 gi·ªù',
            'Lo·∫°i pin': 'Lithium-ion',
            'C·∫£m bi·∫øn': 'Laser scanner, Camera 3D, Ultrasonic'
        }

    def create_mir100_app(self):
        """T·∫°o layout cho trang Help"""
        return html.Div([
            # CSS t√πy ch·ªânh
            html.Style(self._get_custom_css()),
            
            # Header v·ªõi gradient ƒë·∫πp
            html.Div([
                html.Div([
                    html.H1("ü§ñ MiR100 Robot", 
                            className="text-center text-white mb-2",
                            style={'fontSize': '3rem', 'fontWeight': 'bold', 'textShadow': '2px 2px 4px rgba(0,0,0,0.3)'}),
                    html.P("H·ªá th·ªëng h∆∞·ªõng d·∫´n & th√¥ng tin to√†n di·ªán", 
                           className="text-center text-white-50",
                           style={'fontSize': '1.2rem', 'fontWeight': '300'})
                ], className="container py-5")
            ], style={
                'background': f'linear-gradient(135deg, {self.primary_color} 0%, {self.secondary_color} 50%, {self.accent_color} 100%)',
                'minHeight': '200px',
                'display': 'flex',
                'alignItems': 'center'
            }),
            
            # Navigation tabs v·ªõi style ƒë·∫πp
            html.Div([
                dcc.Tabs(id="tabs", value='overview', 
                        children=[
                            dcc.Tab(label='üè† T·ªïng quan', value='overview', className='custom-tab'),
                            dcc.Tab(label='‚öôÔ∏è Th√¥ng s·ªë k·ªπ thu·∫≠t', value='specs', className='custom-tab'),
                            dcc.Tab(label='üìñ H∆∞·ªõng d·∫´n v·∫≠n h√†nh', value='operation', className='custom-tab'),
                            dcc.Tab(label='üõ†Ô∏è Kh·∫Øc ph·ª•c s·ª± c·ªë', value='troubleshooting', className='custom-tab')
                        ], className="custom-tabs")
            ], className="container mt-4"),
            
            # N·ªôi dung ch√≠nh v·ªõi background ƒë·∫πp
            html.Div([
                html.Div(id='tab-content', className="container py-4")
            ], style={'backgroundColor': '#f8f9fa', 'minHeight': '80vh'})
        ])

    def _get_custom_css(self):
        """CSS t√πy ch·ªânh cho giao di·ªán ƒë·∫πp"""
        return f"""
        .custom-tabs .tab {{
            background-color: white !important;
            border: 2px solid {self.primary_color} !important;
            border-radius: 10px 10px 0 0 !important;
            margin-right: 5px !important;
            font-weight: 600 !important;
            transition: all 0.3s ease !important;
        }}
        
        .custom-tabs .tab:hover {{
            background-color: {self.primary_color} !important;
            color: white !important;
            transform: translateY(-2px) !important;
        }}
        
        .custom-tabs .tab--selected {{
            background-color: {self.primary_color} !important;
            color: white !important;
            border-bottom: 2px solid {self.primary_color} !important;
        }}
        
        .feature-card {{
            background: white;
            border-radius: 15px;
            padding: 2rem;
            margin: 1rem 0;
            box-shadow: 0 8px 25px rgba(119, 181, 254, 0.15);
            border: 1px solid rgba(119, 181, 254, 0.2);
            transition: all 0.3s ease;
        }}
        
        .feature-card:hover {{
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(119, 181, 254, 0.25);
        }}
        
        .stat-card {{
            background: linear-gradient(135deg, {self.primary_color}, {self.secondary_color});
            color: white;
            border-radius: 15px;
            padding: 2rem;
            text-align: center;
            margin: 1rem;
            box-shadow: 0 10px 30px rgba(119, 181, 254, 0.3);
            transition: all 0.3s ease;
        }}
        
        .stat-card:hover {{
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 20px 40px rgba(119, 181, 254, 0.4);
        }}
        
        .instruction-step {{
            background: white;
            border-left: 5px solid {self.primary_color};
            border-radius: 0 10px 10px 0;
            padding: 1.5rem;
            margin: 1rem 0;
            box-shadow: 0 4px 15px rgba(119, 181, 254, 0.1);
        }}
        
        .alert-custom {{
            border-radius: 15px;
            border: none;
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        }}
        
        .robot-illustration {{
            background: linear-gradient(45deg, #f0f8ff, #e6f3ff);
            border-radius: 20px;
            padding: 2rem;
            text-align: center;
            box-shadow: 0 10px 30px rgba(119, 181, 254, 0.2);
        }}
        """

    def register_callbacks(self, app):
        """ƒêƒÉng k√Ω callbacks cho ·ª©ng d·ª•ng ch√≠nh"""
        @app.callback(
            Output('tab-content', 'children'),
            Input('tabs', 'value')
        )
        def render_content(tab):
            if tab == 'overview':
                return self._render_overview()
            elif tab == 'specs':
                return self._render_specs()
            elif tab == 'operation':
                return self._render_operation()
            elif tab == 'troubleshooting':
                return self._render_troubleshooting()

    def _render_overview(self):
        """Render trang t·ªïng quan"""
        return html.Div([
            # Hero section
            html.Div([
                html.Div([
                    html.H2("üöÄ Robot MiR100 - Gi·∫£i ph√°p v·∫≠n chuy·ªÉn t·ª± ƒë·ªông th√¥ng minh", 
                            className="mb-4", style={'color': self.primary_color, 'fontWeight': 'bold'}),
                    html.P("MiR100 l√† robot di ƒë·ªông t·ª± ƒë·ªông (AMR) th·∫ø h·ªá m·ªõi ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ v·∫≠n chuy·ªÉn h√†ng h√≥a m·ªôt c√°ch an to√†n, hi·ªáu qu·∫£ v√† th√¥ng minh trong m·ªçi m√¥i tr∆∞·ªùng c√¥ng nghi·ªáp v√† vƒÉn ph√≤ng hi·ªán ƒë·∫°i.", 
                           className="lead", style={'fontSize': '1.2rem', 'lineHeight': '1.8'}),
                ], className="col-md-7"),
                
                html.Div([
                    html.Div([
                        html.Div("ü§ñ", style={'fontSize': '8rem', 'color': self.primary_color}),
                        html.H4("MiR100", className="mt-3", style={'color': self.secondary_color, 'fontWeight': 'bold'}),
                        html.P("Autonomous Mobile Robot", className="text-muted")
                    ], className="robot-illustration")
                ], className="col-md-5")
            ], className="row mb-5"),
            
            # T√≠nh nƒÉng ch√≠nh
            html.H3("‚ú® T√≠nh nƒÉng v∆∞·ª£t tr·ªôi", className="mb-4", style={'color': self.primary_color, 'fontWeight': 'bold'}),
            html.Div([
                html.Div([
                    html.Div([
                        html.Div("üß†", style={'fontSize': '3rem', 'marginBottom': '1rem'}),
                        html.H5("AI Navigation", className="mb-3", style={'color': self.primary_color}),
                        html.P("H·ªá th·ªëng ƒëi·ªÅu h∆∞·ªõng AI ti√™n ti·∫øn v·ªõi kh·∫£ nƒÉng h·ªçc h·ªèi v√† t·ªëi ∆∞u h√≥a ƒë∆∞·ªùng ƒëi t·ª± ƒë·ªông")
                    ], className="feature-card text-center")
                ], className="col-md-4"),
                
                html.Div([
                    html.Div([
                        html.Div("üîã", style={'fontSize': '3rem', 'marginBottom': '1rem'}),
                        html.H5("Pin B·ªÅn B·ªâ", className="mb-3", style={'color': self.primary_color}),
                        html.P("Pin Lithium-ion cao c·∫•p v·ªõi th·ªùi gian ho·∫°t ƒë·ªông l√™n ƒë·∫øn 9 gi·ªù li√™n t·ª•c")
                    ], className="feature-card text-center")
                ], className="col-md-4"),
                
                html.Div([
                    html.Div([
                        html.Div("üõ°Ô∏è", style={'fontSize': '3rem', 'marginBottom': '1rem'}),
                        html.H5("An To√†n Tuy·ªát ƒê·ªëi", className="mb-3", style={'color': self.primary_color}),
                        html.P("H·ªá th·ªëng c·∫£m bi·∫øn 360¬∞ v·ªõi c√¥ng ngh·ªá tr√°nh va ch·∫°m th√¥ng minh")
                    ], className="feature-card text-center")
                ], className="col-md-4")
            ], className="row"),
            
            html.Div([
                html.Div([
                    html.Div([
                        html.Div("üì±", style={'fontSize': '3rem', 'marginBottom': '1rem'}),
                        html.H5("Giao Di·ªán Th√¢n Thi·ªán", className="mb-3", style={'color': self.primary_color}),
                        html.P("Web interface tr·ª±c quan, d·ªÖ s·ª≠ d·ª•ng v·ªõi kh·∫£ nƒÉng ƒëi·ªÅu khi·ªÉn t·ª´ xa")
                    ], className="feature-card text-center")
                ], className="col-md-4"),
                
                html.Div([
                    html.Div([
                        html.Div("üîß", style={'fontSize': '3rem', 'marginBottom': '1rem'}),
                        html.H5("B·∫£o Tr√¨ ƒê∆°n Gi·∫£n", className="mb-3", style={'color': self.primary_color}),
                        html.P("Thi·∫øt k·∫ø modular gi√∫p b·∫£o tr√¨ d·ªÖ d√†ng v√† gi·∫£m thi·ªÉu th·ªùi gian ng·ª´ng ho·∫°t ƒë·ªông")
                    ], className="feature-card text-center")
                ], className="col-md-4"),
                
                html.Div([
                    html.Div([
                        html.Div("üìä", style={'fontSize': '3rem', 'marginBottom': '1rem'}),
                        html.H5("B√°o C√°o Chi Ti·∫øt", className="mb-3", style={'color': self.primary_color}),
                        html.P("H·ªá th·ªëng ph√¢n t√≠ch d·ªØ li·ªáu v·ªõi b√°o c√°o hi·ªáu su·∫•t chi ti·∫øt theo th·ªùi gian th·ª±c")
                    ], className="feature-card text-center")
                ], className="col-md-4")
            ], className="row mb-5"),
            
            # Th√¥ng s·ªë n·ªïi b·∫≠t
            html.H3("üìä Th√¥ng s·ªë n·ªïi b·∫≠t", className="mb-4", style={'color': self.primary_color, 'fontWeight': 'bold'}),
            html.Div([
                html.Div([
                    html.Div([
                        html.H2("100kg", className="mb-2"),
                        html.H6("T·∫£i tr·ªçng t·ªëi ƒëa", className="mb-0")
                    ], className="stat-card")
                ], className="col-md-3"),
                
                html.Div([
                    html.Div([
                        html.H2("1.5m/s", className="mb-2"),
                        html.H6("T·ªëc ƒë·ªô t·ªëi ƒëa", className="mb-0")
                    ], className="stat-card")
                ], className="col-md-3"),
                
                html.Div([
                    html.Div([
                        html.H2("9 gi·ªù", className="mb-2"),
                        html.H6("Th·ªùi gian ho·∫°t ƒë·ªông", className="mb-0")
                    ], className="stat-card")
                ], className="col-md-3"),
                
                html.Div([
                    html.Div([
                        html.H2("360¬∞", className="mb-2"),
                        html.H6("C·∫£m bi·∫øn an to√†n", className="mb-0")
                    ], className="stat-card")
                ], className="col-md-3")
            ], className="row")
        ])

    def _render_specs(self):
        """Render trang th√¥ng s·ªë k·ªπ thu·∫≠t"""
        return html.Div([
            html.H2("‚öôÔ∏è Th√¥ng s·ªë k·ªπ thu·∫≠t chi ti·∫øt", className="mb-4", 
                   style={'color': self.primary_color, 'fontWeight': 'bold'}),
            
            html.Div([
                html.Div([
                    html.Div([
                        html.H4("üìê Th√¥ng s·ªë v·∫≠t l√Ω", className="mb-4", style={'color': self.secondary_color}),
                        html.Table([
                            html.Tbody([
                                html.Tr([
                                    html.Td(k, className="fw-bold", style={'color': self.primary_color, 'width': '40%'}), 
                                    html.Td(v, style={'fontSize': '1.1rem'})
                                ]) for k, v in self.specifications_data.items()
                            ])
                        ], className="table table-hover", style={'fontSize': '1.1rem'})
                    ], className="feature-card")
                ], className="col-md-6"),
                
                html.Div([
                    html.Div([
                        html.H4("üìè S∆° ƒë·ªì k√≠ch th∆∞·ªõc", className="mb-4", style={'color': self.secondary_color}),
                        dcc.Graph(
                            figure=go.Figure().add_shape(
                                type="rect", x0=0, y0=0, x1=890, y1=580,
                                line=dict(color=self.primary_color, width=4),
                                fillcolor=f"rgba(119, 181, 254, 0.1)"
                            ).add_annotation(
                                x=445, y=290, text="MiR100<br>890mm x 580mm",
                                showarrow=False, font=dict(size=16, color=self.primary_color)
                            ).update_layout(
                                title=dict(text="K√≠ch th∆∞·ªõc MiR100 (mm)", 
                                         font=dict(size=18, color=self.primary_color)),
                                xaxis_title="Chi·ªÅu d√†i (890mm)",
                                yaxis_title="Chi·ªÅu r·ªông (580mm)",
                                showlegend=False,
                                height=400,
                                plot_bgcolor='rgba(0,0,0,0)',
                                paper_bgcolor='rgba(0,0,0,0)'
                            )
                        )
                    ], className="feature-card")
                ], className="col-md-6")
            ], className="row"),
            
            # Th√¥ng tin b·ªï sung
            html.Div([
                html.Div([
                    html.H4("üîß Th√¥ng s·ªë k·ªπ thu·∫≠t n√¢ng cao", className="mb-4", style={'color': self.secondary_color}),
                    html.Div([
                        html.Div([
                            html.H6("üå°Ô∏è ƒêi·ªÅu ki·ªán ho·∫°t ƒë·ªông", style={'color': self.primary_color}),
                            html.P("‚Ä¢ Nhi·ªát ƒë·ªô: -10¬∞C ƒë·∫øn +50¬∞C\n‚Ä¢ ƒê·ªô ·∫©m: 10% - 95% (kh√¥ng ng∆∞ng t·ª•)\n‚Ä¢ ƒê·ªô d·ªëc t·ªëi ƒëa: 5¬∞", 
                                  style={'whiteSpace': 'pre-line'})
                        ], className="col-md-6"),
                        
                        html.Div([
                            html.H6("üì° K·∫øt n·ªëi & Giao ti·∫øp", style={'color': self.primary_color}),
                            html.P("‚Ä¢ WiFi 802.11 a/b/g/n\n‚Ä¢ Ethernet 10/100 Mbps\n‚Ä¢ REST API\n‚Ä¢ Modbus TCP", 
                                  style={'whiteSpace': 'pre-line'})
                        ], className="col-md-6")
                    ], className="row")
                ], className="feature-card")
            ], className="row mt-4")
        ])

    def _render_operation(self):
        """Render trang h∆∞·ªõng d·∫´n v·∫≠n h√†nh"""
        return html.Div([
            html.H2("üìñ H∆∞·ªõng d·∫´n v·∫≠n h√†nh chi ti·∫øt", className="mb-4", 
                   style={'color': self.primary_color, 'fontWeight': 'bold'}),
            
            html.Div([
                html.Div([
                    html.Div([
                        html.H4("üöÄ 1. Kh·ªüi ƒë·ªông h·ªá th·ªëng", style={'color': self.secondary_color}),
                        html.Ol([
                            html.Li("Nh·∫•n n√∫t ngu·ªìn m√†u xanh tr√™n robot", style={'marginBottom': '10px'}),
                            html.Li("Ch·ªù h·ªá th·ªëng kh·ªüi ƒë·ªông ho√†n t·∫•t (2-3 ph√∫t)", style={'marginBottom': '10px'}),
                            html.Li("Ki·ªÉm tra ƒë√®n LED tr·∫°ng th√°i chuy·ªÉn sang m√†u xanh", style={'marginBottom': '10px'}),
                            html.Li("K·∫øt n·ªëi v·ªõi giao di·ªán web qua ƒë·ªãa ch·ªâ IP c·ªßa robot", style={'marginBottom': '10px'})
                        ], style={'fontSize': '1.1rem'})
                    ], className="instruction-step")
                ], className="col-12"),
                
                html.Div([
                    html.Div([
                        html.H4("üó∫Ô∏è 2. T·∫°o b·∫£n ƒë·ªì khu v·ª±c", style={'color': self.secondary_color}),
                        html.Ol([
                            html.Li("Truy c·∫≠p giao di·ªán web v√† ch·ªçn tab 'Mapping'", style={'marginBottom': '10px'}),
                            html.Li("Nh·∫•n 'Start Mapping' ƒë·ªÉ b·∫Øt ƒë·∫ßu qu√° tr√¨nh t·∫°o b·∫£n ƒë·ªì", style={'marginBottom': '10px'}),
                            html.Li("ƒêi·ªÅu khi·ªÉn robot di chuy·ªÉn ch·∫≠m quanh to√†n b·ªô khu v·ª±c l√†m vi·ªác", style={'marginBottom': '10px'}),
                            html.Li("ƒê·∫£m b·∫£o robot qu√©t h·∫øt t·∫•t c·∫£ c√°c g√≥c v√† khu v·ª±c quan tr·ªçng", style={'marginBottom': '10px'}),
                            html.Li("Ho√†n th√†nh v√† l∆∞u b·∫£n ƒë·ªì v·ªõi t√™n ph√π h·ª£p", style={'marginBottom': '10px'})
                        ], style={'fontSize': '1.1rem'})
                    ], className="instruction-step")
                ], className="col-12"),
                
                html.Div([
                    html.Div([
                        html.H4("üéØ 3. Thi·∫øt l·∫≠p Mission v√† Waypoints", style={'color': self.secondary_color}),
                        html.Ol([
                            html.Li("M·ªü tab 'Missions' trong giao di·ªán qu·∫£n l√Ω", style={'marginBottom': '10px'}),
                            html.Li("T·∫°o mission m·ªõi v√† ƒë·∫∑t t√™n m√¥ t·∫£ r√µ r√†ng", style={'marginBottom': '10px'}),
                            html.Li("Th√™m c√°c waypoints (ƒëi·ªÉm d·ª´ng) tr√™n b·∫£n ƒë·ªì ƒë√£ t·∫°o", style={'marginBottom': '10px'}),
                            html.Li("C·∫•u h√¨nh h√†nh ƒë·ªông c·ª• th·ªÉ t·∫°i m·ªói waypoint", style={'marginBottom': '10px'}),
                            html.Li("Thi·∫øt l·∫≠p th·ª© t·ª± di chuy·ªÉn v√† th·ªùi gian d·ª´ng", style={'marginBottom': '10px'}),
                            html.Li("Th·ª≠ nghi·ªám mission ·ªü ch·∫ø ƒë·ªô test tr∆∞·ªõc khi tri·ªÉn khai", style={'marginBottom': '10px'})
                        ], style={'fontSize': '1.1rem'})
                    ], className="instruction-step")
                ], className="col-12"),
                
                html.Div([
                    html.Div([
                        html.H4("‚ö° 4. V·∫≠n h√†nh t·ª± ƒë·ªông", style={'color': self.secondary_color}),
                        html.Ol([
                            html.Li("Ch·ªçn mission c·∫ßn th·ª±c hi·ªán t·ª´ danh s√°ch", style={'marginBottom': '10px'}),
                            html.Li("Ki·ªÉm tra tr·∫°ng th√°i pin v√† ƒë·∫£m b·∫£o ƒë·ªß nƒÉng l∆∞·ª£ng", style={'marginBottom': '10px'}),
                            html.Li("Nh·∫•n 'Start Mission' ƒë·ªÉ robot b·∫Øt ƒë·∫ßu ho·∫°t ƒë·ªông", style={'marginBottom': '10px'}),
                            html.Li("Theo d√µi ti·∫øn tr√¨nh th·ª±c hi·ªán qua giao di·ªán real-time", style={'marginBottom': '10px'}),
                            html.Li("Robot s·∫Ω t·ª± ƒë·ªông th·ª±c hi·ªán v√† b√°o c√°o k·∫øt qu·∫£", style={'marginBottom': '10px'})
                        ], style={'fontSize': '1.1rem'})
                    ], className="instruction-step")
                ], className="col-12")
            ], className="row"),
            
            # L∆∞u √Ω an to√†n
            html.Div([
                html.Div([
                    html.H4("‚ö†Ô∏è L∆∞u √Ω an to√†n quan tr·ªçng", className="text-center mb-4", 
                           style={'color': '#dc3545', 'fontWeight': 'bold'}),
                    html.Div([
                        html.Div([
                            html.H6("üîç Tr∆∞·ªõc khi v·∫≠n h√†nh:", style={'color': self.primary_color}),
                            html.Ul([
                                html.Li("Ki·ªÉm tra v√† d·ªçn s·∫°ch ƒë∆∞·ªùng ƒëi"),
                                html.Li("ƒê·∫£m b·∫£o kh√¥ng c√≥ v·∫≠t c·∫£n di ƒë·ªông"),
                                html.Li("Ki·ªÉm tra m·ª©c pin tr√™n 20%")
                            ])
                        ], className="col-md-6"),
                        
                        html.Div([
                            html.H6("üõ†Ô∏è Trong qu√° tr√¨nh ho·∫°t ƒë·ªông:", style={'color': self.primary_color}),
                            html.Ul([
                                html.Li("Gi√°m s√°t robot qua camera"),
                                html.Li("S·∫µn s√†ng nh·∫•n n√∫t d·ª´ng kh·∫©n c·∫•p"),
                                html.Li("Kh√¥ng can thi·ªáp khi robot ƒëang di chuy·ªÉn")
                            ])
                        ], className="col-md-6")
                    ], className="row")
                ], className="alert alert-warning alert-custom p-4")
            ], className="row mt-4")
        ])

    def _render_troubleshooting(self):
        """Render trang kh·∫Øc ph·ª•c s·ª± c·ªë"""
        return html.Div([
            html.H2("üõ†Ô∏è Kh·∫Øc ph·ª•c s·ª± c·ªë th∆∞·ªùng g·∫∑p", className="mb-4", 
                   style={'color': self.primary_color, 'fontWeight': 'bold'}),
            
            html.Div([
                # S·ª± c·ªë 1
                html.Div([
                    html.Div([
                        html.H5("üîã Robot kh√¥ng kh·ªüi ƒë·ªông ƒë∆∞·ª£c", className="mb-3", 
                               style={'color': '#dc3545', 'fontWeight': 'bold'}),
                        html.H6("üîç Nguy√™n nh√¢n c√≥ th·ªÉ:", style={'color': self.primary_color}),
                        html.Ul([
                            html.Li("Pin h·∫øt ho·∫∑c s·∫°c kh√¥ng ƒë·∫ßy"),
                            html.Li("L·ªói k·∫øt n·ªëi c√°p ngu·ªìn"),
                            html.Li("H·ªá th·ªëng b·ªã treo ho·∫∑c l·ªói firmware")
                        ]),
                        html.H6("‚úÖ C√°ch kh·∫Øc ph·ª•c:", style={'color': '#28a745'}),
                        html.Ol([
                            html.Li("Ki·ªÉm tra v√† s·∫°c ƒë·∫ßy pin (LED s·∫°c chuy·ªÉn xanh)"),
                            html.Li("Ki·ªÉm tra ch·∫Øc ch·∫Øn t·∫•t c·∫£ c√°p k·∫øt n·ªëi"),
                            html.Li("Th·ª±c hi·ªán hard reset: nh·∫•n gi·ªØ n√∫t reset 15 gi√¢y"),
                            html.Li("N·∫øu v·∫´n l·ªói, li√™n h·ªá b·ªô ph·∫≠n k·ªπ thu·∫≠t")
                        ])
                    ], className="feature-card border-start border-danger border-4")
                ], className="col-12 mb-4"),
                
                # S·ª± c·ªë 2  
                html.Div([
                    html.Div([
                        html.H5("üó∫Ô∏è Kh√¥ng th·ªÉ t·∫°o b·∫£n ƒë·ªì ho·∫∑c b·∫£n ƒë·ªì kh√¥ng ch√≠nh x√°c", className="mb-3", 
                               style={'color': '#fd7e14', 'fontWeight': 'bold'}),
                        html.H6("üîç Nguy√™n nh√¢n c√≥ th·ªÉ:", style={'color': self.primary_color}),
                        html.Ul([
                            html.Li("C·∫£m bi·∫øn laser b·ªã b·∫©n ho·∫∑c b·ªã che"),
                            html.Li("M√¥i tr∆∞·ªùng c√≥ qu√° nhi·ªÅu b·ªÅ m·∫∑t ph·∫£n x·∫° (k√≠nh, g∆∞∆°ng)"),
                            html.Li("Di chuy·ªÉn qu√° nhanh khi mapping"),
                            html.Li("√Ånh s√°ng qu√° y·∫øu ho·∫∑c qu√° m·∫°nh")
                        ]),
                        html.H6("‚úÖ C√°ch kh·∫Øc ph·ª•c:", style={'color': '#28a745'}),
                        html.Ol([
                            html.Li("V·ªá sinh c·∫£m bi·∫øn laser b·∫±ng khƒÉn m·ªÅm, s·∫°ch"),
                            html.Li("Tr√°nh c√°c khu v·ª±c c√≥ k√≠nh l·ªõn, g∆∞∆°ng trong qu√° tr√¨nh mapping"),
                            html.Li("Di chuy·ªÉn ch·∫≠m v√† ƒë·ªÅu (0.3-0.5 m/s) khi t·∫°o b·∫£n ƒë·ªì"),
                            html.Li("ƒê·∫£m b·∫£o √°nh s√°ng ·ªïn ƒë·ªãnh, tr√°nh √°nh s√°ng ch√≥i"),
                            html.Li("X√≥a b·∫£n ƒë·ªì c≈© v√† t·∫°o l·∫°i t·ª´ ƒë·∫ßu n·∫øu c·∫ßn")
                        ])
                    ], className="feature-card border-start border-warning border-4")
                ], className="col-12 mb-4"),
                
                # S·ª± c·ªë 3
                html.Div([
                    html.Div([
                        html.H5("üö´ Robot d·ª´ng ƒë·ªôt ng·ªôt ho·∫∑c kh√¥ng di chuy·ªÉn", className="mb-3", 
                               style={'color': '#6f42c1', 'fontWeight': 'bold'}),
                        html.H6("üîç Nguy√™n nh√¢n c√≥ th·ªÉ:", style={'color': self.primary_color}),
                        html.Ul([
                            html.Li("Ph√°t hi·ªán v·∫≠t c·∫£n tr√™n ƒë∆∞·ªùng ƒëi"),
                            html.Li("C·∫£m bi·∫øn an to√†n b·ªã k√≠ch ho·∫°t"),
                            html.Li("L·ªói ƒë·ªãnh v·ªã ho·∫∑c m·∫•t b·∫£n ƒë·ªì"),
                            html.Li("Firmware c·∫ßn ƒë∆∞·ª£c c·∫≠p nh·∫≠t")
                        ]),
                        html.H6("‚úÖ C√°ch kh·∫Øc ph·ª•c:", style={'color': '#28a745'}),
                        html.Ol([
                            html.Li("Ki·ªÉm tra v√† d·ªçn s·∫°ch ƒë∆∞·ªùng ƒëi, lo·∫°i b·ªè v·∫≠t c·∫£n"),
                            html.Li("V·ªá sinh t·∫•t c·∫£ c·∫£m bi·∫øn (ultrasonic, camera, laser)"),
                            html.Li("Th·ª±c hi·ªán relocalization tr√™n b·∫£n ƒë·ªì"),
                            html.Li("C·∫≠p nh·∫≠t firmware l√™n phi√™n b·∫£n m·ªõi nh·∫•t"),
                            html.Li("Kh·ªüi ƒë·ªông l·∫°i robot v√† th·ª≠ mission ƒë∆°n gi·∫£n")
                        ])
                    ], className="feature-card border-start border-info border-4")
                ], className="col-12 mb-4"),
                
                # Li√™n h·ªá h·ªó tr·ª£
                html.Div([
                    html.Div([
                        html.H4("üìû H·ªó tr·ª£ k·ªπ thu·∫≠t 24/7", className="text-center mb-4", 
                               style={'color': '#28a745', 'fontWeight': 'bold'}),
                        html.P("Khi kh√¥ng th·ªÉ t·ª± kh·∫Øc ph·ª•c, ƒë·ªôi ng≈© chuy√™n gia c·ªßa ch√∫ng t√¥i lu√¥n s·∫µn s√†ng h·ªó tr·ª£ b·∫°n:", 
                               className="text-center mb-4", style={'fontSize': '1.1rem'}),
                        html.Div([
                            html.Div([
                                html.Div("üì±", style={'fontSize': '3rem', 'marginBottom': '1rem'}),
                                html.H6("Hotline", style={'color': self.primary_color}),
                                html.H5("1900-1234", className="fw-bold")
                            ], className="text-center col-md-3"),
                            
                            html.Div([
                                html.Div("‚úâÔ∏è", style={'fontSize': '3rem', 'marginBottom': '1rem'}),
                                html.H6("Email", style={'color': self.primary_color}),
                                html.H6("support@mir-vietnam.com", className="fw-bold")
                            ], className="text-center col-md-3"),
                            
                            html.Div([
                                html.Div("üïí", style={'fontSize': '3rem', 'marginBottom': '1rem'}),
                                html.H6("Th·ªùi gian", style={'color': self.primary_color}),
                                html.H6("24/7 - T·∫•t c·∫£ c√°c ng√†y", className="fw-bold")
                            ], className="text-center col-md-3"),
                            
                            html.Div([
                                html.Div("üåê", style={'fontSize': '3rem', 'marginBottom': '1rem'}),
                                html.H6("Website", style={'color': self.primary_color}),
                                html.H6("www.mir-vietnam.com", className="fw-bold")
                            ], className="text-center col-md-3")
                        ], className="row")
                    ], className="feature-card text-center", 
                       style={'background': f'linear-gradient(135deg, {self.primary_color}15, {self.secondary_color}15)'})
                ], className="col-12")
            ], className="row")
        ])